name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: 🧪 Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 📥 Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🔍 Run ESLint
      working-directory: ./frontend
      run: npm run lint
      
    - name: 🏗️ Build application
      working-directory: ./frontend
      run: npm run build
      
    - name: 🧪 Run tests (when available)
      working-directory: ./frontend
      run: npm test -- --coverage --watchAll=false
      continue-on-error: true

  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 📥 Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🔒 Run security audit
      working-directory: ./frontend
      run: npm audit --audit-level moderate
      
    - name: 🔍 Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  deploy-preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 📥 Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🏗️ Build for preview
      working-directory: ./frontend
      run: npm run build
      env:
        NODE_ENV: production
        
    - name: 📝 Comment PR with preview info
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✅ Build successful! Preview ready for testing.'
          })

  deploy-production:
    name: 🌐 Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 📥 Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🏗️ Build for production
      working-directory: ./frontend
      run: npm run build
      env:
        NODE_ENV: production
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        
    # Aquí puedes agregar el deployment a tu proveedor preferido
    # - name: 🚀 Deploy to Netlify
    # - name: 🚀 Deploy to Vercel
    # - name: 🚀 Deploy to Railway
    
    - name: 📝 Create deployment notification
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: context.payload.deployment.id,
            state: 'success',
            description: 'Deployment completed successfully'
          })
